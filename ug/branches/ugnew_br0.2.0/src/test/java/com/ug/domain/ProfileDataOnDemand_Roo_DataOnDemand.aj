// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.ug.domain;

import com.ug.domain.Profile;
import com.ug.domain.UniversityDataOnDemand;
import java.util.List;
import java.util.Random;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

privileged aspect ProfileDataOnDemand_Roo_DataOnDemand {
    
    declare @type: ProfileDataOnDemand: @Component;
    
    private Random ProfileDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<Profile> ProfileDataOnDemand.data;
    
    @Autowired
    private UniversityDataOnDemand ProfileDataOnDemand.universityDataOnDemand;
    
    public Profile ProfileDataOnDemand.getNewTransientProfile(int index) {
        com.ug.domain.Profile obj = new com.ug.domain.Profile();
        obj.setUniversity(universityDataOnDemand.getRandomUniversity());
        obj.setCitizenship("citizenship_" + index);
        obj.setDateOfBirth(new java.util.GregorianCalendar(java.util.Calendar.getInstance().get(java.util.Calendar.YEAR), java.util.Calendar.getInstance().get(java.util.Calendar.MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.DAY_OF_MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.HOUR_OF_DAY), java.util.Calendar.getInstance().get(java.util.Calendar.MINUTE), java.util.Calendar.getInstance().get(java.util.Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime());
        obj.setGender(com.ug.reference.Gender.class.getEnumConstants()[0]);
        java.lang.String education = "education_" + index;
        if (education.length() > 200) {
            education  = education.substring(0, 200);
        }
        obj.setEducation(education);
        java.lang.String homePhone = "homePhon_" + index;
        if (homePhone.length() > 10) {
            homePhone  = homePhone.substring(0, 10);
        }
        obj.setHomePhone(homePhone);
        java.lang.String mobile = "mobile_" + index;
        if (mobile.length() > 10) {
            mobile  = mobile.substring(0, 10);
        }
        obj.setMobile(mobile);
        java.lang.String linkedInProfile = "linkedInProfile_" + index;
        if (linkedInProfile.length() > 75) {
            linkedInProfile  = linkedInProfile.substring(0, 75);
        }
        obj.setLinkedInProfile(linkedInProfile);
        return obj;
    }
    
    public Profile ProfileDataOnDemand.getSpecificProfile(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        Profile obj = data.get(index);
        return Profile.findProfile(obj.getId());
    }
    
    public Profile ProfileDataOnDemand.getRandomProfile() {
        init();
        Profile obj = data.get(rnd.nextInt(data.size()));
        return Profile.findProfile(obj.getId());
    }
    
    public boolean ProfileDataOnDemand.modifyProfile(Profile obj) {
        return false;
    }
    
    public void ProfileDataOnDemand.init() {
        data = com.ug.domain.Profile.findProfileEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'Profile' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<com.ug.domain.Profile>();
        for (int i = 0; i < 10; i++) {
            com.ug.domain.Profile obj = getNewTransientProfile(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
