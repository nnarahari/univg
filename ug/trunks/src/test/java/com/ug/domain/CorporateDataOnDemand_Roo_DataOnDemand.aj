// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.ug.domain;

import com.ug.domain.Corporate;
import java.util.List;
import java.util.Random;
import org.springframework.stereotype.Component;

privileged aspect CorporateDataOnDemand_Roo_DataOnDemand {
    
    declare @type: CorporateDataOnDemand: @Component;
    
    private Random CorporateDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<Corporate> CorporateDataOnDemand.data;
    
    public Corporate CorporateDataOnDemand.getNewTransientCorporate(int index) {
        com.ug.domain.Corporate obj = new com.ug.domain.Corporate();
        java.lang.String corporateName = "corporateName_" + index;
        if (corporateName.length() > 20) {
            corporateName  = corporateName.substring(0, 20);
        }
        obj.setCorporateName(corporateName);
        java.lang.String industry = "industry_" + index;
        if (industry.length() > 15) {
            industry  = industry.substring(0, 15);
        }
        obj.setIndustry(industry);
        java.lang.String corporateWebsite = "corporateWebsite_" + index;
        if (corporateWebsite.length() > 30) {
            corporateWebsite  = corporateWebsite.substring(0, 30);
        }
        obj.setCorporateWebsite(corporateWebsite);
        java.lang.String corporateLinkedInProfile = "corporateLinkedInProfile_" + index;
        if (corporateLinkedInProfile.length() > 75) {
            corporateLinkedInProfile  = corporateLinkedInProfile.substring(0, 75);
        }
        obj.setCorporateLinkedInProfile(corporateLinkedInProfile);
        java.lang.String corporatePrimaryContact = "corporatePrimaryContact_" + index;
        if (corporatePrimaryContact.length() > 50) {
            corporatePrimaryContact  = corporatePrimaryContact.substring(0, 50);
        }
        obj.setCorporatePrimaryContact(corporatePrimaryContact);
        obj.setWorkPhone("workPhone_" + index);
        obj.setMobile("mobile_" + index);
        java.lang.String address1 = "address1_" + index;
        if (address1.length() > 50) {
            address1  = address1.substring(0, 50);
        }
        obj.setAddress1(address1);
        java.lang.String address2 = "address2_" + index;
        if (address2.length() > 50) {
            address2  = address2.substring(0, 50);
        }
        obj.setAddress2(address2);
        java.lang.String city = "city_" + index;
        if (city.length() > 50) {
            city  = city.substring(0, 50);
        }
        obj.setCity(city);
        obj.setState(com.ug.reference.State.class.getEnumConstants()[0]);
        java.lang.String zip = "zip_" + index;
        if (zip.length() > 10) {
            zip  = zip.substring(0, 10);
        }
        obj.setZip(zip);
        java.lang.String country = "country_" + index;
        if (country.length() > 20) {
            country  = country.substring(0, 20);
        }
        obj.setCountry(country);
        obj.setEnabled(Boolean.TRUE);
        obj.setLocked(Boolean.TRUE);
        return obj;
    }
    
    public Corporate CorporateDataOnDemand.getSpecificCorporate(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        Corporate obj = data.get(index);
        return Corporate.findCorporate(obj.getId());
    }
    
    public Corporate CorporateDataOnDemand.getRandomCorporate() {
        init();
        Corporate obj = data.get(rnd.nextInt(data.size()));
        return Corporate.findCorporate(obj.getId());
    }
    
    public boolean CorporateDataOnDemand.modifyCorporate(Corporate obj) {
        return false;
    }
    
    public void CorporateDataOnDemand.init() {
        data = com.ug.domain.Corporate.findCorporateEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'Corporate' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<com.ug.domain.Corporate>();
        for (int i = 0; i < 10; i++) {
            com.ug.domain.Corporate obj = getNewTransientCorporate(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
