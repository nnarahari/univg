// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.ug.domain;

import com.ug.domain.CorporateDataOnDemand;
import com.ug.domain.CorporateLoanAmount;
import java.util.List;
import java.util.Random;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

privileged aspect CorporateLoanAmountDataOnDemand_Roo_DataOnDemand {
    
    declare @type: CorporateLoanAmountDataOnDemand: @Component;
    
    private Random CorporateLoanAmountDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<CorporateLoanAmount> CorporateLoanAmountDataOnDemand.data;
    
    @Autowired
    private CorporateDataOnDemand CorporateLoanAmountDataOnDemand.corporateDataOnDemand;
    
    public CorporateLoanAmount CorporateLoanAmountDataOnDemand.getNewTransientCorporateLoanAmount(int index) {
        com.ug.domain.CorporateLoanAmount obj = new com.ug.domain.CorporateLoanAmount();
        obj.setCorporate(corporateDataOnDemand.getRandomCorporate());
        obj.setCommittedLoanAmount(java.math.BigDecimal.valueOf(index));
        obj.setAvailableLoanAmount(java.math.BigDecimal.valueOf(index));
        obj.setLoanedAmount(java.math.BigDecimal.valueOf(index));
        return obj;
    }
    
    public CorporateLoanAmount CorporateLoanAmountDataOnDemand.getSpecificCorporateLoanAmount(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        CorporateLoanAmount obj = data.get(index);
        return CorporateLoanAmount.findCorporateLoanAmount(obj.getId());
    }
    
    public CorporateLoanAmount CorporateLoanAmountDataOnDemand.getRandomCorporateLoanAmount() {
        init();
        CorporateLoanAmount obj = data.get(rnd.nextInt(data.size()));
        return CorporateLoanAmount.findCorporateLoanAmount(obj.getId());
    }
    
    public boolean CorporateLoanAmountDataOnDemand.modifyCorporateLoanAmount(CorporateLoanAmount obj) {
        return false;
    }
    
    public void CorporateLoanAmountDataOnDemand.init() {
        data = com.ug.domain.CorporateLoanAmount.findCorporateLoanAmountEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'CorporateLoanAmount' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<com.ug.domain.CorporateLoanAmount>();
        for (int i = 0; i < 10; i++) {
            com.ug.domain.CorporateLoanAmount obj = getNewTransientCorporateLoanAmount(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
